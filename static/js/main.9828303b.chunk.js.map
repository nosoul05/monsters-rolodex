{"version":3,"sources":["components/Card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monsters","id","name","email","phone","address","street","CardList","map","SearchBox","placeholder","handleChange","type","onChange","App","onSearchChange","event","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAGaA,EAAO,SAACC,GAAD,OACpB,sBAAKC,UAAU,iBAAf,UACA,qBAAKC,IAAK,UAAUC,IAAG,+BAA0BH,EAAMI,SAASC,GAAzC,4BACnB,mCAAML,EAAMI,SAASE,QACrB,6BAAKN,EAAMI,SAASE,OACpB,4BAAIN,EAAMI,SAASG,QACnB,6BAAKP,EAAMI,SAASI,QACpB,4BAAIR,EAAMI,SAASK,QAAQC,aCLlBC,EAAW,SAAAX,GAAK,OACzB,qBAAKC,UAAU,YAAf,SAEMD,EAAMI,SAASQ,KAAI,SAAAR,GAAQ,OACvB,cAAC,EAAD,CAAwBA,SAAUA,GAAvBA,EAASC,UCNrBQ,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OAErB,uBACAd,UAAU,SACVe,KAAK,SACLF,YAAcA,EACdG,SAAWF,MCkGAG,G,wDA3Ef,aAAc,IAAD,8BACX,gBAgCFC,eAAiB,SAAAC,GACf,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SA/B1C,EAAKC,MAAO,CAEVrB,SAAS,GACTkB,YAAa,IANJ,E,qDAWb,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAG1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACjB,SAAU0B,S,oBAqB1C,WAEE,MAAmCC,KAAKN,MAAhCrB,EAAR,EAAQA,SAAUkB,EAAlB,EAAkBA,YACZU,EAAmB5B,EAAS6B,QAAO,SAAA7B,GAAQ,OAC/CA,EAASE,KAAK4B,cAAcC,SAASb,EAAYc,wBAGnD,OACM,sBAAKnC,UAAU,MAAf,UACE,oBAAIA,UAAU,gBAAd,8BAKN,cAAC,EAAD,CAGCa,YAAY,kBACbC,aAAegB,KAAKZ,iBAElB,cAAC,EAAD,CAAUf,SAAU4B,W,GA3DRK,cClBHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAS1BZ,M","file":"static/js/main.9828303b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css'\r\n\r\nexport const Card = (props) =>(\r\n<div className='card-container'> \r\n<img alt =\"monster\" src={`https://robohash.org/${props.monsters.id}?set=set2&size=180x180`}></img>\r\n    <h1> {props.monsters.name}</h1>\r\n    <h2>{props.monsters.name}</h2>\r\n    <p>{props.monsters.email}</p>\r\n    <h3>{props.monsters.phone}</h3>\r\n    <p>{props.monsters.address.street}</p>\r\n</div>\r\n\r\n\r\n);","import React from 'react';\r\nimport './card-list.css';\r\nimport {Card} from '../Card/card.component';\r\n\r\n\r\nexport const CardList = props =>(\r\n    <div className='card-list'>\r\n        {\r\n          props.monsters.map(monsters =>(\r\n              <Card key={monsters.id} monsters={monsters} />\r\n            // <h1 key={monsters.id}> {monsters.name} </h1>\r\n            \r\n          ))}\r\n    </div>\r\n\r\n);\r\n\r\n\r\n// export const CardList = props =>{\r\n//     // console.log(props);\r\n//     return <div className='card-list'>{props.children}</div>\r\n\r\n// };\r\n\r\n\r\n// export const CardList = (props) =>{\r\n// console.log(props);\r\n// return(  <div>Hello</div> )\r\n// } ","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeholder, handleChange }) => (\r\n\r\n    <input \r\n    className='search'\r\n    type='search' \r\n    placeholder= {placeholder} \r\n    onChange= {handleChange}\r\n    />\r\n)","import { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component'\nimport { SearchBox} from './components/search-box/search-box.component';\nimport './App.css';\n\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <p>Hello my name is Chris</p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n\n\nclass App extends Component {\n\nconstructor(){\n  super();\n\n  this.state ={\n   \n    monsters:[],\n    searchField: ''\n   \n  };\n}\n\ncomponentDidMount(){\n  fetch('https://jsonplaceholder.typicode.com/users')\n  .then(response => response.json())\n  //user below to test response\n  //.then(users => console.log(users)\n  .then(users => this.setState({monsters: users}));\n}\n\n/*Example of using function Using this would change handleChange={this.handleChange|*/\n/*\nhandleChange(e) {\n  this.setState({searchField: e.target.value })\n}\n\nthis.handleChange= this.handleChange.bind(this)\n\nInstead of the aboev it is better to use\nhandleChange =e=>{\n  this.setState({searchField: e.target.value});\n}\n*/\n\nonSearchChange = event => {\n  this.setState({ searchField: event.target.value});\n};\n\nrender() {\n\n  const { monsters, searchField } =  this.state;\n  const filteredMonsters = monsters.filter(monsters => \n    monsters.name.toLowerCase().includes(searchField.toLocaleLowerCase())\n\n  )\n  return (\n        <div className=\"App\">\n          <h1 className=\"monsterHeader\">Monsters Rolodex</h1>\n      {/* <CardList name='Chris'> <h1>Chris</h1> */}\n      {/* Use the below for testing value */}\n      {/* <input type='search' placeholder='search monsters' onChange={e=> console.log(e.target.value)}/> */}\n    \n    <SearchBox\n   /*  placeholder='search monsters'\n     handleChange={e => this.setState({searchField: e.target.value})}*/\n     placeholder='search monsters'\n    handleChange ={this.onSearchChange}\n    /> \n      <CardList monsters={filteredMonsters} >\n    \n      {/* {\n          this.state.monsters.map(monsters =>( <h1 key={monsters.id}> {monsters.name} </h1>\n            \n          ))} */}\n          </CardList>\n           \n        </div>\n  )\n}\n\n\n}\n\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n//Changed the above to match the tutorial.\n//ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}